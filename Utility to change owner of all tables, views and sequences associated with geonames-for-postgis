#!/bin/bash

usage()
{
cat << EOF
usage: $0 options

Changes ownership for a database and all tables, sequences and views 
within that database.  It is specifically intended for use with PostGIS 2.x
and the topology schema it creates.

It requires a postgres superuser execute it (e.g., postgres)

Credit: Based on http://stackoverflow.com/a/2686185/305019 by Alex Soto
Also merged changes from @sharoonthomas

OPTIONS:
-h Show this message
-d Database name
-o New owner
EOF
}

DB_NAME=
NEW_OWNER=

while getopts "hd:o:" OPTION
do
case $OPTION in
        h)
            usage
            exit 1
            ;;
        d)
            DB_NAME=$OPTARG
            ;;
        o)
            NEW_OWNER=$OPTARG
            ;;
    esac
done

if [[ -z $DB_NAME ]] || [[ -z $NEW_OWNER ]]
then
usage
     exit 1
fi

for tbl in `psql -qAt -c "select tablename from pg_tables where schemaname = 'public';" ${DB_NAME}` \
           `psql -qAt -c "select sequence_name from information_schema.sequences where sequence_schema = 'public';" ${DB_NAME}` \
           `psql -qAt -c "select table_name from information_schema.views where table_schema = 'public';" ${DB_NAME}` \
           `psql -qAt -c "select tablename from pg_tables where schemaname = 'topology';" ${DB_NAME}` \
           `psql -qAt -c "select sequence_name from information_schema.sequences where sequence_schema = 'topology';" ${DB_NAME}`\          
           `psql -qAt -c "select table_name from information_schema.views where table_schema = 'topology';" ${DB_NAME}` ;
;
do
psql -c "alter table \"$tbl\" owner to ${NEW_OWNER}" ${DB_NAME} ;
done

psql -c "ALTER DATABASE ${DBNAME} OWNER TO ${NEW_OWNER}" ;
exit 0